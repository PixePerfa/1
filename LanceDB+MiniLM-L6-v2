import lancedb
from sentence_transformers import SentenceTransformer

pip install lancedb
pip install sentence-transformers
**************************************************
from sentence_transformers import SentenceTransformer

# Connect to LanceDB
db = lancedb.connect()
collection = db.create_collection("code_embeddings")

# Generate embeddings
model = SentenceTransformer('paraphrase-MiniLM-L6-v2')
code_snippets = ["your code snippet here"]
embeddings = model.encode(code_snippets)

# Insert data
documents = [{"id": idx, "embedding": embedding.tolist()} for idx, embedding in enumerate(embeddings)]
collection.insert(documents)

****************************************************
import lancedb

# Connect to LanceDB
db = lancedb.connect()

# Create a collection for storing embeddings
collection = db.create_collection("code_embeddings")

# Prepare data for insertion
documents = [{"id": idx, "embedding": embedding.tolist()} for idx, embedding in enumerate(embeddings)]

# Insert data into the collection
collection.insert(documents)
***********************************************************
# Generate embedding for the query
query_embedding = model.encode(["search query here"])[0]

# Search in the collection
results = collection.search(query_embedding, top_k=5)
for result in results:
    print(result["id"], result["score"])
**********************************************************************
import redis
import numpy as np

r = redis.Redis(host='localhost', port=6379, db=0)

# Store embeddings in Redis
for idx, embedding in enumerate(embeddings):
    r.hset(f"embedding:{idx}", mapping={str(i): val for i, val in enumerate(embedding)})

# Retrieve embedding from Redis for fast lookup
def get_embedding_from_redis(idx):
    return np.array([float(r.hget(f"embedding:{idx}", str(i))) for i in range(embedding.shape[1])])


-----------------------
#  Sukuria 4 - RAG  === / qdrant / chroma / redis / faiss /
# 

# Install dependencies for building Faiss
sudo apt-get update
sudo apt-get install -y cmake libopenblas-dev liblapack-dev liblapacke-dev libatlas-base-dev libprotobuf-dev protobuf-compiler

# Install dependencies for Qdrant
sudo apt-get install -y build-essential libssl-dev pkg-config libgflags-dev libsnappy-dev zlib1g-dev

# Install dependencies for Chroma
sudo apt-get install -y build-essential libatlas-base-dev libboost-all-dev libprotobuf-dev protobuf-compiler libyaml-cpp-dev

# Install Redis dependencies
sudo apt-get install -y build-essential tcl

# Clone Faiss repository
git clone https://github.com/facebookresearch/faiss.git
cd faiss
git checkout v1.7.1  # Use the version you prefer

# Build and install Faiss
cmake -B build .
cmake --build build --target python
pip install -e .

# Clone Qdrant repository
cd ..
git clone https://github.com/qdrant/qdrant.git
cd qdrant

# Install Qdrant
pip install -r requirements.txt
pip install -e .

# Clone Chroma repository
cd ..
git clone https://github.com/chromesearcher/chroma.git
cd chroma

# Install Chroma
pip install -e .

# Download and install Redis
cd ..
wget http://download.redis.io/releases/redis-6.2.5.tar.gz
tar xzf redis-6.2.5.tar.gz
cd redis-6.2.5
make

# Start Redis server
src/redis-server
